trigger: none

pool:
  vmImage: 'ubuntu-20.04'

variables:
  version: ''
  localMavenSettingFile: '../maven-settings.xml'

steps:
  - task: MavenAuthenticate@0
    inputs:
      artifactsFeeds: 'product-release'
    displayName: 'Export maven repository credentials'
  - bash: |
        #!/bin/bash
        touch $(localMavenSettingFile)
        env | grep GIT_ACCESS_TOKEN
        export | grep GIT_ACCESS_TOKEN
        echo '<settings>' >> $(localMavenSettingFile)
        echo '  <servers>' >> $(localMavenSettingFile)
        echo '      <server>' >> $(localMavenSettingFile)
        echo '          <id>az-goco-git</id>' >> $(localMavenSettingFile)
        echo '          <username>releaser</username>' >> $(localMavenSettingFile)
        echo '          <password>$(GIT_ACCESS_TOKEN)</password>' >> $(localMavenSettingFile)
        echo '      </server>' >> $(localMavenSettingFile)
        echo '  </servers>' >> $(localMavenSettingFile)
        echo '</settings>' >> $(localMavenSettingFile)
        cat $(localMavenSettingFile)
    displayName: 'Write $(localMavenSettingFile) with git credentials'
  - task: Maven@3
    displayName: 'mvn releaser:release'
    inputs:
      mavenPomFile: 'pom.xml'
      goals: 'releaser:release'
      options: '-DserverId=az-goco-git -gs $(localMavenSettingFile) '
      publishJUnitResults: true
      testResultsFiles: '**/surefire-reports/TEST-*.xml'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '1.11'
      jdkArchitectureOption: 'x64'
      mavenVersionOption: 'Default'
      mavenAuthenticateFeed: false
      effectivePomSkip: false
      sonarQubeRunAnalysis: false
  - bash: |
      #!/bin/bash
      cat ls -la $(System.DefaultWorkingDirectory)/target/infra/az-aci-deploy.json
    displayName: 'Show az-aci-deploy.json'
  - publish: $(System.DefaultWorkingDirectory)/target/infra/az-aci-deploy.json
    artifact: infra
    displayName: 'Package az-aci-deploy.json'
  - publish: $(System.DefaultWorkingDirectory)/target/maven-archiver/pom.properties
    artifact: maven
    displayName: 'Package pom.properties'
  - bash: |
      #!/bin/bash
      cat ./target/maven-archiver/pom.properties
      set -a
      . ./target/maven-archiver/pom.properties
      set +a
      echo "##vso[task.setvariable variable=groupId;]$groupId"
      echo "##vso[task.setvariable variable=artifactId;]$artifactId"
      echo "##vso[task.setvariable variable=version;]$version"
    displayName: 'Export pom.properties'
  - bash: |
      #!/bin/bash
      echo "##vso[build.updatebuildnumber]$(version)"
    displayName: 'Update release name'
  - task: Docker@2
    displayName: 'Build and push container image'
    inputs:
      containerRegistry: 'gocompliant-container-registry'
      repository: 'mockservice-server'
      Dockerfile: '$(System.DefaultWorkingDirectory)/infra/Dockerfile'
      buildContext: '$(System.DefaultWorkingDirectory)'
      tags: '$(version)'