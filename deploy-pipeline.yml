trigger:
- master
pool:
  vmImage: 'ubuntu-latest'
variables:
  #containerRegistryServiceConnection: gocompliant-container-registry
  azureARMServiceConnection: smarthub-ARM
  #imageRepository: mockservice-server
  resourceGroupName: smarthub-group
  #tag: latest

stages:
- stage: DeployIT
  displayName: Deploy to IT
  condition: false
  jobs:
    # track deployments on the environment
  - deployment: DeployIT
    # creates an environment if it doesn't exist
    environment: 'IT'
    strategy:
      # default deployment strategy, more coming...
      runOnce:
        deploy:
          steps:
            - task: DownloadPipelineArtifact@2
              inputs:
                buildType: 'current'
                artifactName: 'target'
                targetPath: '$(System.DefaultWorkingDirectory)/target'
            - script: pwd
            - script: ls -la
            - script: ls -la $(System.DefaultWorkingDirectory)/target
            - task: AzureCLI@2
              displayName: 'Deploy to Azure'
              inputs:
                azureSubscription: $(azureARMServiceConnection)
                scriptType: 'bash'
                scriptLocation: 'inlineScript'
                inlineScript: az container create --resource-group $(resourceGroupName) --file $(System.DefaultWorkingDirectory)/target/aciManifest.yml
 
